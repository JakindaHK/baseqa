

/* First created by JCasGen Tue Mar 05 08:57:57 EST 2013 */
package org.oaqa.model;

import org.apache.uima.jcas.JCas; 
import org.apache.uima.jcas.JCasRegistry;
import org.apache.uima.jcas.cas.TOP_Type;

import org.apache.uima.jcas.cas.FSArray;
import org.apache.uima.jcas.cas.DoubleArray;
import org.apache.uima.jcas.cas.StringArray;


/** An answer generated by the QA system.
 * Updated by JCasGen Tue Mar 05 08:57:57 EST 2013
 * XML source: /home/leo/stuff/OAQA.rankqa/baseqa/src/main/resources/edu/cmu/lti/oaqa/OAQATypes.xml
 * @generated */
public class Answer extends OAQATop {
  /** @generated
   * @ordered 
   */
  @SuppressWarnings ("hiding")
  public final static int typeIndexID = JCasRegistry.register(Answer.class);
  /** @generated
   * @ordered 
   */
  @SuppressWarnings ("hiding")
  public final static int type = typeIndexID;
  /** @generated  */
  @Override
  public              int getTypeIndexID() {return typeIndexID;}
 
  /** Never called.  Disable default constructor
   * @generated */
  protected Answer() {/* intentionally empty block */}
    
  /** Internal - constructor used by generator 
   * @generated */
  public Answer(int addr, TOP_Type type) {
    super(addr, type);
    readObject();
  }
  
  /** @generated */
  public Answer(JCas jcas) {
    super(jcas);
    readObject();   
  } 

  /** <!-- begin-user-doc -->
    * Write your own initialization here
    * <!-- end-user-doc -->
  @generated modifiable */
  private void readObject() {/*default - does nothing empty block */}
     
 
    
  //*--------------*
  //* Feature: text

  /** getter for text - gets The actual answer string.
   * @generated */
  public String getText() {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_text == null)
      jcasType.jcas.throwFeatMissing("text", "org.oaqa.model.Answer");
    return jcasType.ll_cas.ll_getStringValue(addr, ((Answer_Type)jcasType).casFeatCode_text);}
    
  /** setter for text - sets The actual answer string. 
   * @generated */
  public void setText(String v) {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_text == null)
      jcasType.jcas.throwFeatMissing("text", "org.oaqa.model.Answer");
    jcasType.ll_cas.ll_setStringValue(addr, ((Answer_Type)jcasType).casFeatCode_text, v);}    
   
    
  //*--------------*
  //* Feature: searchResultList

  /** getter for searchResultList - gets List of search results that are associated with this answer candidate.
   * @generated */
  public FSArray getSearchResultList() {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_searchResultList == null)
      jcasType.jcas.throwFeatMissing("searchResultList", "org.oaqa.model.Answer");
    return (FSArray)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_searchResultList)));}
    
  /** setter for searchResultList - sets List of search results that are associated with this answer candidate. 
   * @generated */
  public void setSearchResultList(FSArray v) {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_searchResultList == null)
      jcasType.jcas.throwFeatMissing("searchResultList", "org.oaqa.model.Answer");
    jcasType.ll_cas.ll_setRefValue(addr, ((Answer_Type)jcasType).casFeatCode_searchResultList, jcasType.ll_cas.ll_getFSRef(v));}    
    
  /** indexed getter for searchResultList - gets an indexed value - List of search results that are associated with this answer candidate.
   * @generated */
  public SearchResult getSearchResultList(int i) {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_searchResultList == null)
      jcasType.jcas.throwFeatMissing("searchResultList", "org.oaqa.model.Answer");
    jcasType.jcas.checkArrayBounds(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_searchResultList), i);
    return (SearchResult)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefArrayValue(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_searchResultList), i)));}

  /** indexed setter for searchResultList - sets an indexed value - List of search results that are associated with this answer candidate.
   * @generated */
  public void setSearchResultList(int i, SearchResult v) { 
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_searchResultList == null)
      jcasType.jcas.throwFeatMissing("searchResultList", "org.oaqa.model.Answer");
    jcasType.jcas.checkArrayBounds(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_searchResultList), i);
    jcasType.ll_cas.ll_setRefArrayValue(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_searchResultList), i, jcasType.ll_cas.ll_getFSRef(v));}
   
    
  //*--------------*
  //* Feature: score

  /** getter for score - gets The score associated with the answer.
   * @generated */
  public double getScore() {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_score == null)
      jcasType.jcas.throwFeatMissing("score", "org.oaqa.model.Answer");
    return jcasType.ll_cas.ll_getDoubleValue(addr, ((Answer_Type)jcasType).casFeatCode_score);}
    
  /** setter for score - sets The score associated with the answer. 
   * @generated */
  public void setScore(double v) {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_score == null)
      jcasType.jcas.throwFeatMissing("score", "org.oaqa.model.Answer");
    jcasType.ll_cas.ll_setDoubleValue(addr, ((Answer_Type)jcasType).casFeatCode_score, v);}    
   
    
  //*--------------*
  //* Feature: rank

  /** getter for rank - gets Rank of this result.
   * @generated */
  public int getRank() {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_rank == null)
      jcasType.jcas.throwFeatMissing("rank", "org.oaqa.model.Answer");
    return jcasType.ll_cas.ll_getIntValue(addr, ((Answer_Type)jcasType).casFeatCode_rank);}
    
  /** setter for rank - sets Rank of this result. 
   * @generated */
  public void setRank(int v) {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_rank == null)
      jcasType.jcas.throwFeatMissing("rank", "org.oaqa.model.Answer");
    jcasType.ll_cas.ll_setIntValue(addr, ((Answer_Type)jcasType).casFeatCode_rank, v);}    
   
    
  //*--------------*
  //* Feature: featureLabels

  /** getter for featureLabels - gets Feature labels for this Answer.
   * @generated */
  public StringArray getFeatureLabels() {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_featureLabels == null)
      jcasType.jcas.throwFeatMissing("featureLabels", "org.oaqa.model.Answer");
    return (StringArray)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureLabels)));}
    
  /** setter for featureLabels - sets Feature labels for this Answer. 
   * @generated */
  public void setFeatureLabels(StringArray v) {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_featureLabels == null)
      jcasType.jcas.throwFeatMissing("featureLabels", "org.oaqa.model.Answer");
    jcasType.ll_cas.ll_setRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureLabels, jcasType.ll_cas.ll_getFSRef(v));}    
    
  /** indexed getter for featureLabels - gets an indexed value - Feature labels for this Answer.
   * @generated */
  public String getFeatureLabels(int i) {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_featureLabels == null)
      jcasType.jcas.throwFeatMissing("featureLabels", "org.oaqa.model.Answer");
    jcasType.jcas.checkArrayBounds(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureLabels), i);
    return jcasType.ll_cas.ll_getStringArrayValue(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureLabels), i);}

  /** indexed setter for featureLabels - sets an indexed value - Feature labels for this Answer.
   * @generated */
  public void setFeatureLabels(int i, String v) { 
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_featureLabels == null)
      jcasType.jcas.throwFeatMissing("featureLabels", "org.oaqa.model.Answer");
    jcasType.jcas.checkArrayBounds(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureLabels), i);
    jcasType.ll_cas.ll_setStringArrayValue(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureLabels), i, v);}
   
    
  //*--------------*
  //* Feature: featureVector

  /** getter for featureVector - gets Feature values for this Answer.  The indexes into this array correspond to the indexes into the featureLabels array on the AnswerList.  This is more efficient representation than the list of (feature name, feature value) pairs, in the case where feature values are always numeric.
   * @generated */
  public DoubleArray getFeatureVector() {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_featureVector == null)
      jcasType.jcas.throwFeatMissing("featureVector", "org.oaqa.model.Answer");
    return (DoubleArray)(jcasType.ll_cas.ll_getFSForRef(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureVector)));}
    
  /** setter for featureVector - sets Feature values for this Answer.  The indexes into this array correspond to the indexes into the featureLabels array on the AnswerList.  This is more efficient representation than the list of (feature name, feature value) pairs, in the case where feature values are always numeric. 
   * @generated */
  public void setFeatureVector(DoubleArray v) {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_featureVector == null)
      jcasType.jcas.throwFeatMissing("featureVector", "org.oaqa.model.Answer");
    jcasType.ll_cas.ll_setRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureVector, jcasType.ll_cas.ll_getFSRef(v));}    
    
  /** indexed getter for featureVector - gets an indexed value - Feature values for this Answer.  The indexes into this array correspond to the indexes into the featureLabels array on the AnswerList.  This is more efficient representation than the list of (feature name, feature value) pairs, in the case where feature values are always numeric.
   * @generated */
  public double getFeatureVector(int i) {
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_featureVector == null)
      jcasType.jcas.throwFeatMissing("featureVector", "org.oaqa.model.Answer");
    jcasType.jcas.checkArrayBounds(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureVector), i);
    return jcasType.ll_cas.ll_getDoubleArrayValue(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureVector), i);}

  /** indexed setter for featureVector - sets an indexed value - Feature values for this Answer.  The indexes into this array correspond to the indexes into the featureLabels array on the AnswerList.  This is more efficient representation than the list of (feature name, feature value) pairs, in the case where feature values are always numeric.
   * @generated */
  public void setFeatureVector(int i, double v) { 
    if (Answer_Type.featOkTst && ((Answer_Type)jcasType).casFeat_featureVector == null)
      jcasType.jcas.throwFeatMissing("featureVector", "org.oaqa.model.Answer");
    jcasType.jcas.checkArrayBounds(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureVector), i);
    jcasType.ll_cas.ll_setDoubleArrayValue(jcasType.ll_cas.ll_getRefValue(addr, ((Answer_Type)jcasType).casFeatCode_featureVector), i, v);}
  }

    